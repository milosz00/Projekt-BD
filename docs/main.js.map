{"version":3,"sources":["./src/app/pipes/get-doctors-visit.pipe.ts","./src/environments/environment.ts","./src/app/components/home/home.component.html","./src/app/components/home/home.component.ts","./src/app/services/prescriptions.service.ts","./src/app/components/visits/visits.component.ts","./src/app/components/visits/visits.component.html","./src/app/components/create-prescription/create-prescription.component.ts","./src/app/components/create-prescription/create-prescription.component.html","./src/app/services/db-query.service.ts","./src/app/pipes/get-visit-by-dates.pipe.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/services/visits.service.ts","./src/app/components/login/login.component.html","./src/app/components/login/login.component.ts","./src/app/components/register/register.component.html","./src/app/components/register/register.component.ts","./src/app/services/patients.service.ts","./src/app/app.module.ts","./src/app/components/book-visit/book-visit.component.ts","./src/app/components/book-visit/book-visit.component.html","./src/app/components/admin/admin.component.ts","./src/app/components/admin/admin.component.html","./src/app/components/prescription-list/prescription-list.component.html","./src/app/components/prescription-list/prescription-list.component.ts","./src/app/models/prescription.ts","./src/app/components/patients/patients.component.ts","./src/app/components/patients/patients.component.html","./src/app/services/doctors.service.ts","./src/app/services/auth.service.ts","./src/app/components/account-active/account-active.component.html","./src/app/components/account-active/account-active.component.ts","./src/app/components/work-hours/work-hours.component.ts","./src/app/components/work-hours/work-hours.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { Visit } from '../models/visit';\n\n@Pipe({\n  name: 'getDoctorsVisit'\n})\nexport class GetDoctorsVisitPipe implements PipeTransform {\n\n  transform(items: Array<Visit>, doctorsKeys: Array<String>): Array<Visit> {\n    return items.filter(item => doctorsKeys.includes(item.doctorKey) === true);\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig : {\n    apiKey: \"AIzaSyAU4rSiQiP2zP5jMMm0_MZvCJ9oM9JF3WA\",\n    authDomain: \"medical-clini.firebaseapp.com\",\n    projectId: \"medical-clini\",\n    storageBucket: \"medical-clini.appspot.com\",\n    messagingSenderId: \"973158807649\",\n    appId: \"1:973158807649:web:e1e80023e133448338d220\",\n    measurementId: \"G-BDEYJHB8YY\"\n  },\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<ng-container *ngFor=\"let item of user\">\n    <div *ngIf = \"item.role === 'doctor'\">\n        <h1 style=\"margin-top: 100px;text-align: center;\">Welcome dr. {{item.firstname}} {{item.lastname}}</h1>\n        <div class=\"flex-container container\">\n            <div class=\"flex-box col-10 col-md-5\">\n                <a class=\"nav-link\" routerLink = \"/visits\">\n                    <img src=\"assets/images/hours.jpg\" class=\"img-fluid\">\n                    <div class=\"sign\">Visits</div>\n                </a>\n            </div>\n            <div class=\"flex-box col-10 col-md-5\">\n                <a class = \"nav-link\" routerLink=\"/patients\">\n                    <img src=\"assets/images/visitors.jpg\" class=\"img-fluid\">\n                    <div class=\"sign\">Patients</div>\n                </a>\n            </div>\n            <div class=\"flex-box col-10 col-md-5\">\n                <a class=\"nav-link\" routerLink = \"/workHours\">\n                    <img src=\"assets/images/doctor.jpg\" class=\"img-fluid\">\n                    <div class=\"sign\">Work Hours</div>\n                </a>\n            </div>\n        </div>\n    </div>\n</ng-container>\n\n\n<ng-container *ngFor=\"let item of user\">\n    <div *ngIf = \"item.role === 'patient'\">\n        <h1 style=\"margin-top: 100px;text-align: center;\">Welcome {{item.firstname}} {{item.lastname}}</h1>\n\n        <div class=\"flex-container container\">\n            <div class=\"flex-box col-10 col-md-5\">\n                <a class=\"nav-link\" routerLink = \"/visits\">\n                    <img src=\"assets/images/hours.jpg\" class=\"img-fluid\">\n                    <div class=\"sign\">Your Visits</div>\n                </a>\n            </div>\n            <div class=\"flex-box col-10 col-md-5\">\n                <a class = \"nav-link\" routerLink=\"/book-visit\">\n                    <img src=\"assets/images/book-visit.png\" class=\"img-fluid\">\n                    <div class=\"sign\">Book Visit</div>\n                </a>\n            </div>\n            <div class=\"flex-box col-10 col-md-5\">\n                <a class = \"nav-link\" routerLink=\"/patients\">\n                    <img src=\"assets/images/prescription.jpg\" class=\"img-fluid\">\n                    <div class=\"sign\">Your Presciptions</div>\n                </a>\n            </div>\n        </div>\n    </div>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { DbQueryService } from 'src/app/services/db-query.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  userName: string;\n  userEmail: string;\n  user: any[];\n  constructor(private auth: AuthService, private queryService: DbQueryService) { }\n\n  ngOnInit(): void {\n    console.log(this.auth.getCurrentUserEmail());\n    this.userEmail = this.auth.getCurrentUserEmail();\n    this.getDoctorWithEmail(this.userEmail);\n    this.getPatientWithEmail(this.userEmail);\n  }\n\n  getDoctorWithEmail(email: string) {\n    this.queryService.findDoctorByEmail(email, \"value\").subscribe(x=>{this.user = x;console.log(x)});\n  }\n\n  getPatientWithEmail(email: string) {\n    this.queryService.findPatientByEmail(email, \"value\").subscribe(x=>{if(this.user.length === 0) this.user = x; console.log(this.user)});\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport {Prescription} from \"../models/prescription\"\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrescriptionsService {\n\n  constructor(private db: AngularFireDatabase) { }\n\n  getPrescriptions(){\n    return this.db.list(\"prescriptions\").valueChanges()\n  }\n  createPrescription(prescription: Prescription){\n    this.db.list(\"prescriptions\").push(prescription);\n\n  }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Visit } from 'src/app/models/visit';\nimport { DoctorsService } from 'src/app/services/doctors.service';\nimport { VisitsService } from 'src/app/services/visits.service';\n\n@Component({\n  selector: 'app-visits',\n  templateUrl: './visits.component.html',\n  styleUrls: ['./visits.component.css']\n})\n\nexport class VisitsComponent implements OnInit {\n\n  constructor(private visitService: VisitsService, private doctorService: DoctorsService) { }\n\n  ngOnInit(): void {\n    this.getVisits();\n    this.getDoctors();\n  }\n\n  visits: Visit[] = [];\n  doctors: Map<String, String> = new Map();\n  patientKey: string = \"-MZKMRbirtB-S8UUiWZe\";  // TODO: zmien aby pobierało poprawny key \n\n  getVisits(): void{\n    this.visitService.getPatientVisits(this.patientKey).pipe(\n      map(changes =>\n      \n        changes.map(c =>\n        \n        ({​​ key: c.payload.key, ...c.payload.val() }​​)\n        \n        ))\n      \n      ).subscribe(\n      \n      visits => {​​this.visits = visits;console.log(this.visits)}​​);\n  }\n\n  getDoctors(): void{\n    this.doctorService.getDoctors().pipe(\n      map(changes =>\n      \n        changes.map(c =>\n        \n        ({​​ key: c.payload.key, ...c.payload.val() }​​)\n        \n        ))\n      \n      ).subscribe(\n      \n      values => {values.forEach(value => {this.doctors.set(value.key, value.firstname + \" \" + value.lastname)});console.log(this.doctors)}​​);\n  }\n\n  findDoctorName(key: String){\n    return this.doctors.get(key);\n  }\n\n  deleteVisit(key: string){\n    this.visitService.deletePatientFromVisit(key);\n  }\n}","<p style=\"margin-top: 52px;\"></p>\n\n<ng-container>\n    <div class=\"d-flex flex-column justify-content-center items border m-3 p-2\">\n      <div class=\"item\" *ngFor=\"let visit of visits\">\n        <div class=\"name col-8\">\n          <span style=\"font-weight: bold;\">Data rozpoczęcie wizyty: {{visit.startDate | date: 'HH:mm dd/MM/yyyy'}}</span><br>\n          <span style=\"font-weight: bold;\">Data zakończenia wizyty: {{visit.endDate | date: 'HH:mm dd/MM/yyyy'}}</span><br>\n          <span style=\"font-weight: bold;\">Lekarz: dr. {{findDoctorName(visit.doctorKey)}} </span>\n        </div>\n        <button class=\"btn btn-danger col-3\" (click)=\"deleteVisit(visit.key)\">Delete</button>\n      </div>\n    </div>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { PrescriptionsService } from 'src/app/services/prescriptions.service';\nimport {Prescription} from 'src/app/models/prescription';\n\n@Component({\n  selector: 'app-create-prescription',\n  templateUrl: './create-prescription.component.html',\n  styleUrls: ['./create-prescription.component.css']\n})\nexport class CreatePrescriptionComponent implements OnInit {\n\n  prescriptionForm = this.formBuilder.group({\n    pesel: '',\n    validity: '',\n    doctor:''\n\n\n  });\n\n  medicine=\"\";\n  quantity=\"\";\n  medicines = []\n  constructor(private formBuilder: FormBuilder, private prescriptionsService: PrescriptionsService) { }\n\n  ngOnInit(): void {\n  }\n  log(x){\n    console.log(x)\n  }\n\n  onSubmit(){\n    if(this.prescriptionForm.value.pesel.length!=11){\n      alert(\"PESEL złej długości\");\n      return;\n    }\n    else{\n      for(let i = 0; i<this.prescriptionForm.value.pesel.length; i++){\n        if(isNaN(parseInt(this.prescriptionForm.value.pesel[i]))){\n          alert(\"Błędny PESEL\");\n          return;\n        }\n      }\n    }\n    let d1 = Date.now();\n    let d2 = new Date(this.prescriptionForm.value.validity).getTime();\n    console.log(d1)\n    console.log(d2)\n    if(d1>=d2 || isNaN(d1) || isNaN(d2)){\n      alert(\"Błędne daty\");\n      return;\n    }\n    let newPrescription = new Prescription(this.prescriptionForm.value.pesel, this.prescriptionForm.value.doctor,\n      this.medicines, this.prescriptionForm.value.validity);\n    this.prescriptionsService.createPrescription(newPrescription);\n    alert(\"Pomyślnie wystawiono nową receptę!\");\n    this.prescriptionForm.reset();\n  }\n\n  addMedicine(){\n    if(this.medicine==\"\" || this.quantity==\"\" ||  isNaN(parseFloat(this.quantity)) || parseFloat(this.quantity)<=0.0){\n      alert(\"Nieporawne dodawanie leku do recepty\");\n      return;\n    }\n    else{\n      this.medicines.push({\"medicine\":this.medicine, \"quantity\":this.quantity});\n      this.medicine = \"\";\n      this.quantity = \"\";\n    }\n  }\n}","<div style=\"margin-top: 52px; width:60%;margin-left:20%;\">\n    <h1>Tworzenie nowej recepty</h1>\n    <form [(formGroup)]=\"prescriptionForm\" (ngSubmit)=\"onSubmit()\" class=\"form-group\" style=\"margin-bottom:50px;\">\n        <div class=\"content\">\n        <button class=\"btn btn-success\" type=\"submit\">Wystaw receptę</button>\n        \n            <div>\n                <label for=\"pesel\">\n                PESEL Pacjenta\n                </label>\n                <input id=\"pesel\" type=\"text\" formControlName=\"pesel\" class=\"form-control\">\n            </div>\n\n\n            <div>\n                <label for=\"validity\">\n                Ważność recepty\n                </label>\n                <input id=\"validity\" type=\"date\" formControlName=\"validity\" class=\"form-control\">\n            </div>\n\n\n            <div>\n                <label for=\"doctor\">\n                Lekarz wypisujący\n                </label>\n                <input id=\"doctor\" type=\"text\" formControlName=\"doctor\" class=\"form-control\">\n            </div>\n\n\n\n        </div>\n      </form>\n      <div>\n        <label for=\"medicine\">\n        Lek\n        </label>\n        <input [(ngModel)]=\"medicine\" id=\"medicine\" type=\"text\" [ngModelOptions]=\"{standalone: true}\" class=\"form-control\">\n    </div>\n    <div>\n        <label for=\"quantity\">\n        Ilość\n        </label>\n        <input [(ngModel)]=\"quantity\" id=\"quantity\" type=\"text\" [ngModelOptions]=\"{standalone: true}\" class=\"form-control\">\n    </div>\n    <button (click)=\"addMedicine()\" class=\"btn btn-secondary\">Dodaj lek</button>\n    <h3>Dodane leki na recepcie:</h3>\n    <ul>\n        <li *ngFor = \"let medicine of medicines\">Nazwa: {{medicine.medicine}}, ilość: {{medicine.quantity}}</li>\n    </ul>\n</div>","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DbQueryService {\n\n  constructor(private db: AngularFireDatabase) { }\n\n  findPatientByEmail(email: string, type: string):Observable<any> {\n    if(type === 'value')\n      return this.db.list('patients', ref => ref.orderByChild(\"email\").equalTo(email)).valueChanges();\n    else if(type === 'snapshot')\n      return this.db.list('patients', ref => ref.orderByChild(\"email\").equalTo(email)).snapshotChanges();\n  }\n\n  findDoctorByEmail(email: string, type: string): Observable<any> {\n    if(type === 'value')\n      return this.db.list('doctors', ref => ref.orderByChild(\"email\").equalTo(email)).valueChanges();\n    else if(type === 'snapshot')\n      return this.db.list('doctors', ref => ref.orderByChild(\"email\").equalTo(email)).snapshotChanges();\n  }\n\n  changeToActive(key: string, role: string) {\n    this.db.list(role).update(key, {active: true});\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Visit } from '../models/visit';\n\n@Pipe({\n  name: 'getVisitByDates'\n})\nexport class GetVisitByDatesPipe implements PipeTransform {\n\n  transform(visits: Array<Visit>, startDate: Date, endDate: Date): unknown {\n    return visits.filter(item => (startDate <= item.startDate && item.startDate <= endDate) === true);\n  }\n\n}","<nav class=\"navbar navbar-expand-lg navbar-dark bg-success fixed-top\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\">Clinic</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\" (click)=\"toggleCollapsed()\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div id=\"navbarSupportedContent\" [ngClass]=\"{'collapse': collapsed, 'navbar-collapse': true}\" *ngIf = \"loginState\">\n\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\" *ngIf = \"isDoctor\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" aria-current=\"page\" routerLink = \"home\">Home</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink = \"visits\">Visits</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link \" routerLink=\"patients\">Patients</a>          \n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"workHours\">Work Hours</a>\n        </li>\n      </ul>\n\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\" *ngIf = \"isPatient\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" aria-current=\"page\" routerLink = \"home\">Home</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink = \"visits\">Visits</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link \" routerLink=\"patients\">Prescriptions</a>          \n        </li>\n      </ul>\n\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\" *ngIf = \"isAdmin\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" aria-current=\"page\" routerLink = \"admin-panel\">Admin Panel</a>\n        </li>\n      </ul>\n\n      <button class=\"btn btn-success\" [ngClass] = \"{'logout':collapsed}\" (click)=\"logOut()\" *ngIf = \"loginState\">Log Out</button>\n    </div>\n\n    <div id=\"navbarSupportedContent\" [ngClass]=\"{'collapse': collapsed, 'navbar-collapse': true}\" *ngIf = \"!loginState\">\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" aria-current=\"page\" routerLink = \"sign-in\">Sign In</a>\n        </li>\n      </ul>\n\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" aria-current=\"page\" routerLink = \"register\">Sign Up</a>\n        </li>\n      </ul>\n\n    </div>\n  \n  </div>\n</nav>\n\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './services/auth.service';\nimport { DbQueryService } from './services/db-query.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  collapsed = true;\n  loginState = null;\n  isAdmin = false;\n  isDoctor = false;\n  isPatient = false;\n\n  constructor(private auth: AuthService, private queryService: DbQueryService) {\n  }\n\n  ngOnInit(): void {\n    this.loginState = this.auth.getState().subscribe(user => {\n      if(user){\n        this.loginState = true;\n        if(user.email === 'admin@admin.com')\n          this.isAdmin = true;\n        else{\n\n          this.queryService.findDoctorByEmail(user.email, \"value\").subscribe(x => {\n            if(x.length > 0){ \n              this.isDoctor = true;\n              return;\n            }\n          })\n\n          this.queryService.findPatientByEmail(user.email, \"value\"). subscribe(x => {\n            if(x.length > 0) {\n              this.isPatient = true;\n              return;\n            } \n          })\n\n        }\n      }\n      else{\n        this.loginState = false;\n        this.isAdmin = false;\n        this.isPatient = false;\n        this.isDoctor = false;\n      }\n    })\n  }\n\n  toggleCollapsed(): void {\n    this.collapsed = !this.collapsed;\n  }\n\n  logOut() {\n    this.auth.logOut();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { Observable } from 'rxjs';\nimport { Visit } from '../models/visit';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VisitsService {\n\n  constructor(private db: AngularFireDatabase) { }\n\n  getAllVisits(): Observable<any>{\n    return this.db.list('visits').snapshotChanges();\n  }\n\n  getPatientVisits(patientKey: string): Observable<any>{\n    return this.db.list('visits', ref => ref.orderByChild('patientKey').equalTo(patientKey)).snapshotChanges();\n  }\n\n  getFreeVisits(): Observable<any>{\n    return this.getPatientVisits(\"\");\n  }\n\n  createVisit(visit: Visit): void{\n    this.db.list(\"visits\").push(visit);\n  }\n\n  deleteVisit(key: string): void{\n    this.db.list(\"visits\").remove(key);\n  }\n\n  addPatientToVisit(visitKey: string, patientKey: string){\n    this.db.list(\"visits\").update(visitKey, {patientKey: patientKey});\n  }\n\n  deletePatientFromVisit(key: string): void {\n    this.addPatientToVisit(key, \"\");\n  }\n\n  \n}\n","<div id=\"formContent\">\n    <!-- Login Form -->\n    <div>\n        <input type=\"email\" id=\"email\" class=\"fadeIn second\" name=\"email\" placeholder=\"email\" [(ngModel)]=\"email\">\n        <input type=\"password\" id=\"password\" class=\"fadeIn third\" name=\"password\" placeholder=\"password\" [(ngModel)]=\"password\">\n        <input type=\"submit\" class=\"fadeIn fourth\" value=\"Log In\" (click)=\"onLogIn()\">\n        <div><a routerLink=\"/register\" style=\"color:green;font-size: 12px;\" class=\"link\">New in Clinic? Sign Up!</a></div>\n\n        <div *ngIf=\"alertVisible\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\" style=\"margin-top: 10px;\">\n            {{errorInfo}}\n            <button type=\"button\" class=\"close\" (click)=\"hideAlert()\" aria-label=\"close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n        </div>\n \n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n// import { AuthService } from 'src/app/auth.service';\nimport { Alert } from 'src/app/models/alert';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\n  isLogged = false;\n  email: string; password: string;\n  persistence: any;\n  alert: Alert;\n\n  alertVisible = false;\n  errorInfo = '';\n\n  ngOnInit() {}\n\n  constructor(private auth: AuthService) { }\n\n  onLogIn(){\n    this.auth.logIn(this.email,this.password).catch(\n      err => {this.errorInfo = err.message; this.alertVisible = true;}\n    )\n  }\n\n\n  hideAlert(){\n    this.alertVisible = false;\n  }\n\n}","<div class=\"form-box d-flex flex-column col-11 col-md-4\">\n    <h1>SIGN UP</h1>\n    <div class=\"form\">\n      <div class=\"form-row\">\n        \n        <div class=\"col-10 input\" style=\"margin-top: 20px;\">\n            <input type=\"radio\" id=\"doctor\" name=\"role\" value=\"doctor\" [(ngModel)] = \"userRole\"> \n            <label for=\"doctor\" style=\"margin-left: 3px;\">Doctor</label>\n            <input type=\"radio\" id=\"patient\" name=\"role\" value=\"patient\" style=\"margin-left: 8px;\" [(ngModel)] = \"userRole\"> \n            <label for=\"patient\" style=\"margin-left: 3px;\">Patient</label>\n        </div>\n\n        <div class=\"col-10 input\">\n          <input placeholder=\"Firstname\" class=\"form-control\" [(ngModel)]=\"firstname\">\n        </div>\n          \n        <div class=\"col-10 input\">\n          <input placeholder=\"Lastname\" class=\"form-control\" [(ngModel)]=\"lastname\">\n        </div>\n        \n        <div class=\"col-10 input\">\n          <input placeholder=\"Telephone Number\" type=\"tel\" class=\"form-control\" [(ngModel)]=\"telephone\">\n        </div>\n        \n        <ng-container *ngIf=\"userRole === 'patient'\">\n            <div class=\"col-10 input\">\n                <input placeholder=\"PESEL\" class=\"form-control\" [(ngModel)]=\"pesel\">\n            </div>\n        </ng-container>\n\n        <ng-container *ngIf=\"userRole === 'doctor'\">\n          <div class=\"col-10 input\">\n            <input placeholder = \"Specialization\" class=\"form-control\" [(ngModel)]=\"specialization\">\n          </div>\n          \n          <div class=\"col-10 input\">\n            <input placeholder=\"Office Address\" class=\"form-control\" [(ngModel)]=\"address\">\n          </div>\n        </ng-container>\n\n        <div class=\"col-10 input\" style=\"margin-top: 30px;\">\n            <input placeholder=\"Email\" type=\"email\" class=\"form-control\" [(ngModel)]=\"email\">\n        </div>\n\n        <div class=\"col-10 input\">\n            <input type=\"password\" placeholder=\"Password\" class=\"form-control\" [(ngModel)]=\"password\">\n        </div>\n\n        <div class=\"col-10 input\">\n            <input type=\"password\" placeholder=\"Re-enter password\"  class=\"form-control\" [(ngModel)]=\"password_repeat\">\n        </div>\n\n      </div>\n\n        <input type=\"submit\" class=\"btn btn-primary\" style=\"display: block;margin-left: auto;margin-right: auto;margin-top: 30px;\" value=\"Sign Up\" (click)=\"onCreateUser()\">\n        \n        <div *ngIf=\"alertVisible\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\" style=\"margin-top: 10px;\">\n            {{errorInfo}}\n            <button type=\"button\" class=\"close\" (click)=\"hideAlert()\" aria-label=\"close\">\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Doctor } from 'src/app/models/doctor';\nimport { Patient } from 'src/app/models/patient';\nimport { AuthService } from 'src/app/services/auth.service';\n// import { AuthService } from 'src/app/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  \n  // forms inputs\n  firstname = \"\";\n  lastname = \"\";\n  telephone = null;\n  email = null;\n  specialization = \"\";\n  address = \"\";  \n  password = ''; \n  password_repeat = ''; \n  userRole = null;\n  pesel = '';\n\n  alertVisible = false;\n  errorInfo = '';\n\n  constructor(private auth: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  onCreateUser(): void {\n    if(!this.validatePassword())\n      return;\n    if(!this.validateRadioButton())\n      return;\n    \n    let user = this.prepareUser();\n    this.auth.createUser(this.email,this.password, this.userRole.toString().concat(\"s\"), user, true)\n    .catch( err => {this.errorInfo = err.message; this.alertVisible = true;})\n  }\n\n  validatePassword(): boolean {\n    if(this.password !== this.password_repeat) {\n      this.alertVisible = true;\n      this.errorInfo = \"Passwords are not the same!\";\n      return false;\n    } else {\n      this.alertVisible = false;\n    }\n    return true;\n  }\n\n  validateRadioButton(): boolean {\n    if(this.userRole === null) {\n      this.alertVisible = true;\n      this.errorInfo = \"You must choose doctor or patient role!\";\n      return false;\n    } else {\n      this.alertVisible = false;\n    }\n    return true;\n  }\n \n  hideAlert(): void{\n    this.alertVisible = false;\n  }\n\n  prepareUser(): any {\n    if(this.userRole === 'patient') {\n      let patient: Patient = {\n        firstname: this.firstname,\n        lastname: this.lastname,\n        email: this.email,\n        telephoneNumber: this.telephone,\n        pesel: this.pesel,\n        active: true,\n        role: \"patient\",\n      }\n      return patient;\n\n    } else if(this.userRole === 'doctor') {\n      let doctor: Doctor = {\n        firstname: this.firstname,\n        lastname: this.lastname,\n        telephoneNumber: this.telephone,\n        email: this.email,\n        specialization: this.specialization,\n        officeAddress: this.address,\n        workHours: null,\n        active: true,\n        role: \"doctor\",\n      };\n      return doctor\n    }\n    return null;\n  }\n}","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { Observable } from 'rxjs';\nimport { Patient } from '../models/patient';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientsService {\n\n  constructor(private db: AngularFireDatabase, private auth: AuthService) { }\n\n  getPatients(): Observable<any> {\n    return this.db.list('patients').snapshotChanges();\n  }\n\n  createPatient(patient: Patient): void {\n    this.auth.createUser(patient.email, \"default\", \"patients\", patient, false);\n  }\n\n  deletePatient(key: string): void {\n    this.db.list('patients').remove(key);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { VisitsComponent } from './components/visits/visits.component';\nimport { PatientsComponent } from './components/patients/patients.component';\nimport { WorkHoursComponent } from './components/work-hours/work-hours.component';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { environment } from 'src/environments/environment';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule } from '@angular/forms';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { DoctorsService } from './services/doctors.service';\nimport { PatientsService } from './services/patients.service';\nimport { AccountActiveComponent } from './components/account-active/account-active.component';\nimport { BookVisitComponent } from './components/book-visit/book-visit.component';\nimport { GetDoctorsVisitPipe } from './pipes/get-doctors-visit.pipe';\nimport { GetVisitByDatesPipe } from './pipes/get-visit-by-dates.pipe';\nimport { CreatePrescriptionComponent } from './components/create-prescription/create-prescription.component';\nimport { PrescriptionListComponent } from './components/prescription-list/prescription-list.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    VisitsComponent,\n    PatientsComponent,\n    WorkHoursComponent,\n    AdminComponent,\n    LoginComponent,\n    RegisterComponent,\n    AccountActiveComponent,\n    BookVisitComponent,\n    GetDoctorsVisitPipe,\n    GetVisitByDatesPipe,\n    CreatePrescriptionComponent,\n    PrescriptionListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireDatabaseModule,\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Visit } from 'src/app/models/visit';\nimport { DoctorsService } from 'src/app/services/doctors.service';\nimport { VisitsService } from 'src/app/services/visits.service';\n\n@Component({\n  selector: 'app-book-visit',\n  templateUrl: './book-visit.component.html',\n  styleUrls: ['./book-visit.component.css']\n})\nexport class BookVisitComponent implements OnInit {\n\n  constructor(private visitService: VisitsService, private doctorService: DoctorsService) { }\n\n  visits: Visit[] = [];\n  doctors: Map<String, String> = new Map();\n  patientKey: string = \"-MZKMRbirtB-S8UUiWZe\"; // TODO: zmień klucz \n\n  choosenDoctorsKeys: Array<String>;\n\n  startDate = String(\"1990-01-01\");\n  endDate = String(\"2030-01-01\");\n\n  ngOnInit(): void {\n    this.getVisits();\n    this.getDoctors();\n  }\n\n  getVisits(): void{\n    this.visitService.getFreeVisits().pipe(\n      map(changes =>\n      \n        changes.map(c =>\n        \n        ({​​ key: c.payload.key, ...c.payload.val() }​​)\n        \n        ))\n      \n      ).subscribe(\n      \n      visits => {​​this.visits = visits;console.log(this.visits)}​​);\n  }\n\n  getDoctors(): void{\n    this.doctorService.getDoctors().pipe(\n      map(changes =>\n      \n        changes.map(c =>\n        \n        ({​​ key: c.payload.key, ...c.payload.val() }​​)\n        \n        ))\n      \n      ).subscribe(\n      \n      values => {values.forEach(value => {this.doctors.set(value.key, value.firstname + \" \" + value.lastname)});console.log(this.doctors)}​​);\n  }\n\n  findDoctorName(key: String): String{\n    return this.doctors.get(key);\n  }\n\n  addVisit(key: string): void{\n    this.visitService.addPatientToVisit(key, this.patientKey);\n  }\n\n  resetFilter(): void{\n    this.startDate = String(\"1990-01-01\");\n    this.endDate = String(\"2030-01-01\");\n  }\n}","<p style=\"margin-top: 52px;\"></p>\n\n<ng-container>\n  <h2 class=\"m-2\">Filter</h2>\n\n  <h3 class=\"m-2\">Start Date</h3>\n  <div class=\"col-10 input\">\n    <input type=\"datetime-local\" class=\"form-control\" [(ngModel)]=\"startDate\">\n  </div>\n  \n  <h3 class=\"m-2\">End Date</h3>\n  <div class=\"col-10 input\">\n    <input type=\"datetime-local\" class=\"form-control\" [(ngModel)]=\"endDate\">\n  </div>\n\n  <button class=\"btn btn-danger col-2 m-2\" (click)=\"resetFilter()\">Reset filter</button>\n\n</ng-container>\n\n<h2 class=\"m-2\">Visits</h2>\n<ng-container>\n    <div class=\"d-flex flex-column justify-content-center items m-1 p-1\">\n      <div class=\"item m-2 p-2 border\" *ngFor=\"let visit of visits | getVisitByDates: startDate:endDate\">\n        <div class=\"name col-8 \">\n          <span style=\"font-weight: bold;\">Data rozpoczęcie wizyty: {{visit.startDate | date: 'HH:mm dd/MM/yyyy'}}</span><br>\n          <span style=\"font-weight: bold;\">Data zakończenia wizyty: {{visit.endDate | date: 'HH:mm dd/MM/yyyy'}}</span><br>\n          <span style=\"font-weight: bold;\">Lekarz: dr. {{findDoctorName(visit.doctorKey)}} </span>\n        </div>\n        <button class=\"btn btn-primary col-3\" (click)=\"addVisit(visit.key)\">Reserve</button>\n      </div>\n    </div>\n</ng-container>\n","import { AfterContentChecked, AfterContentInit, AfterViewInit, Component, OnInit } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { Doctor } from 'src/app/models/doctor';\nimport { Patient } from 'src/app/models/patient';\nimport { DoctorsService } from 'src/app/services/doctors.service';\nimport { PatientsService } from 'src/app/services/patients.service';\nimport { map } from 'rxjs/operators';\nimport { VisitsService } from 'src/app/services/visits.service';\nimport { Visit } from 'src/app/models/visit';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  formAddDoctorVisible = false;\n  formAddPatientVisible = false;\n  formAddVisitVisible = false;\n  listDoctorsVisible = false;\n  listPatientsVisible = false;\n  listVisitsVisible = false;\n  formTitle: string;\n\n  doctors: Doctor[] = [];\n  patients: Patient[] = [];\n  visits: Visit[] = [];\n\n  constructor(private doctorService: DoctorsService, private patientService: PatientsService, private visitService: VisitsService) { }\n\n  ngOnInit(): void {\n    this.getDoctorsList();\n    this.getPatientsList();\n    this.getVisitsList();\n  }\n\n  // forms inputs\n  firstname = \"\";\n  lastname = \"\";\n  telephone = null;\n  email = null;\n  specialization = \"\";\n  address = \"\";  \n\n  // form inputs for adding visit\n  doctorKey = \"\";\n  startDate = null;\n  endDate = null;\n\n\n  addPerson(): void {\n    if(this.formAddDoctorVisible) {\n      const doctor: Doctor = {\n        firstname: this.firstname,\n        lastname: this.lastname,\n        telephoneNumber: this.telephone,\n        email: this.email,\n        specialization: this.specialization,\n        officeAddress: this.address,\n        workHours: null,\n        active: false,\n        role: \"doctor\",\n      };\n\n      this.doctorService.createDoctor(doctor);\n\n    } else if(this.formAddPatientVisible){\n      const patient: Patient = {\n        firstname: this.firstname,\n        lastname: this.lastname,\n        email: this.email,\n        telephoneNumber: this.telephone,\n        pesel: \"\",\n        active: false,\n        role: \"patient\",\n      }\n\n      this.patientService.createPatient(patient);\n    }\n\n    this.firstname = \"\";\n    this.lastname = \"\";\n    this.telephone = null;\n    this.email = null;\n    this.specialization = \"\";\n    this.address = \"\";\n  }\n\n  addVisit(): void {\n    const visit: Visit = {\n      doctorKey: this.doctorKey,\n      startDate: this.startDate,\n      endDate: this.endDate,\n      patientKey: \"\",\n    };\n\n    console.log(visit);\n    this.visitService.createVisit(visit);\n\n    this.doctorKey = \"\";\n    this.startDate = new Date();\n    this.endDate = new Date();\n  }\n\n\n  changeVisible(formChosen): void {\n    if(formChosen === 0) {\n      this.formAddDoctorVisible = !this.formAddDoctorVisible;\n      \n      this.listDoctorsVisible = false; this.listPatientsVisible = false; this.formAddPatientVisible = false; this.formAddVisitVisible = false; this.listVisitsVisible = false;\n      this.formTitle = \"Add Doctor\";\n    } else if(formChosen === 1){\n      this.formAddPatientVisible = !this.formAddPatientVisible;\n      \n      this.listDoctorsVisible = false; this.listPatientsVisible = false; this.formAddDoctorVisible = false; this.formAddVisitVisible = false; this.listVisitsVisible = false;\n      this.formTitle = \"Add Patient\";\n    } else if(formChosen === 2) {\n      this.listDoctorsVisible = !this.listDoctorsVisible;\n\n      this.formAddPatientVisible = false; this.listPatientsVisible = false; this.formAddDoctorVisible = false; this.formAddVisitVisible = false; this.listVisitsVisible = false;\n    } else if(formChosen == 3){\n      this.listPatientsVisible = !this.listPatientsVisible;\n\n      this.formAddPatientVisible = false; this.listDoctorsVisible = false; this.formAddDoctorVisible = false; this.formAddVisitVisible = false; this.listVisitsVisible = false;\n    } else if(formChosen == 6){\n      this.formAddVisitVisible = !this.formAddVisitVisible;\n\n      this.formAddDoctorVisible = false; this.listDoctorsVisible = false; this.listPatientsVisible = false; this.formAddPatientVisible = false; this.listVisitsVisible = false;\n    } else if(formChosen == 7){\n      this.listVisitsVisible = !this.listVisitsVisible;\n\n      this.formAddDoctorVisible = false; this.listDoctorsVisible = false; this.listPatientsVisible = false; this.formAddPatientVisible = false; this.formAddVisitVisible = false;\n    }\n  }\n\n  deleteDoctor(key: string): void {\n    this.doctorService.deleteDoctor(key);\n  }\n\n  deletePatient(key: string): void {\n    this.patientService.deletePatient(key);\n  }\n\n  deleteVisit(key: string): void {\n    this.visitService.deleteVisit(key);\n  }\n\n  getDoctorsList(): void {\n    this.doctorService.getDoctors().pipe(\n\n      map(changes =>\n      \n        changes.map(c =>\n        \n        ({​​ key: c.payload.key, ...c.payload.val() }​​)\n        \n        ))\n      \n      ).subscribe(\n      \n      doctors => {​​this.doctors = doctors;console.log(this.doctors)}​​);\n  }\n\n  getPatientsList(): void {\n    this.patientService.getPatients().pipe(\n      map(changes =>\n      \n        changes.map(c =>\n        \n        ({​​ key: c.payload.key, ...c.payload.val() }​​)\n        \n        ))\n      \n      ).subscribe(\n      \n      patients => {​​this.patients = patients;console.log(this.patients)}​​);\n  }\n\n  getVisitsList(): void{\n    this.visitService.getAllVisits().pipe(\n      map(changes =>\n      \n        changes.map(c =>\n        \n        ({​​ key: c.payload.key, ...c.payload.val() }​​)\n        \n        ))\n      \n      ).subscribe(\n      \n      visits => {​​this.visits = visits;console.log(this.visits)}​​);\n  }\n\n  getDoctorName(key: String): String{\n    for(let doctor of this.doctors){\n      if(doctor.key === key){\n        return \"dr. \" + doctor.firstname + \" \" + doctor.lastname;\n      }\n    }\n\n    return \"dr.\";\n  }\n\n  getPacientName(key: String): String{\n    for(let patient of this.patients){\n      if(patient.key === key){\n        return patient.firstname + \" \" + patient.lastname;\n      }\n    }\n\n    return \"\";\n  }\n\n}\n","<div class=\"buttons col-11 col-md-6\">\n  <h1>Admin Panel</h1>\n  <div class=\"buttons-item col-12\">\n    <button class=\"btn btn-primary\" (click)=\"changeVisible(0)\">Add Doctor</button>\n    <button class=\"btn btn-danger\" (click)=\"changeVisible(2)\">Delete Doctor</button>\n  </div>\n  <div class=\"buttons-item col-12\">\n    <button class=\"btn btn-primary\" (click)=\"changeVisible(1)\">Add Patient</button>\n    <button class=\"btn btn-danger\" (click)=\"changeVisible(3)\">Delete Patient</button>\n  </div>\n  <div class=\"buttons-item col-12\">\n    <button class=\"btn btn-primary\" (click)=\"changeVisible(6)\">Add Visit</button>\n    <button class=\"btn btn-danger\" (click)=\"changeVisible(7)\">Delete Visit</button>\n  </div>\n</div>\n\n<div class=\"form-box d-flex flex-column col-11 col-md-4\" *ngIf=\"formAddDoctorVisible || formAddPatientVisible\">\n  <h1>{{formTitle}}</h1>\n  <div class=\"form\">\n    <div class=\"form-row\">\n        \n      <div class=\"col-10 input\">\n        <input placeholder=\"Firstname\" class=\"form-control\" [(ngModel)]=\"firstname\">\n      </div>\n        \n      <div class=\"col-10 input\">\n        <input placeholder=\"Lastname\" class=\"form-control\" [(ngModel)]=\"lastname\">\n      </div>\n      \n      <div class=\"col-10 input\">\n        <input placeholder=\"Telephone Number\" type=\"tel\" class=\"form-control\" [(ngModel)]=\"telephone\">\n      </div>\n      \n      <div class=\"col-10 input\">\n        <input placeholder=\"Email\" type=\"email\" class=\"form-control\" [(ngModel)]=\"email\">\n      </div>\n      \n      <ng-container *ngIf=\"formAddDoctorVisible\">\n        <div class=\"col-10 input\">\n          <input placeholder = \"Specialization\" class=\"form-control\" [(ngModel)]=\"specialization\">\n        </div>\n        \n        <div class=\"col-10 input\">\n          <input placeholder=\"Office Address\" class=\"form-control\" [(ngModel)]=\"address\">\n        </div>\n      </ng-container>\n      \n    </div>\n    <button class=\"btn btn-primary btn-block\" (click)=\"addPerson()\">Submit</button>\n  </div>\n</div>\n\n<div class=\"form-box d-flex flex-column col-11 col-md-4\" *ngIf=\"formAddVisitVisible\">\n  <h1>Add Visit</h1>\n  <div class=\"form\">\n    <div class=\"form-row\">\n\n      <div class=\"col-10 input\">\n        <select class=\"form-select w-100\" aria-label=\"Default select example\" class=\"form-control\" [(ngModel)]=\"doctorKey\">\n            <option selected *ngFor = \"let doctor of doctors\" value=\"{{doctor.key}}\">dr. {{doctor.firstname}} {{doctor.lastname}}</option>\n        </select>\n      </div>\n\n      <div class=\"col-10 input\">\n        <input type=\"datetime-local\" class=\"form-control\" [(ngModel)]=\"startDate\">\n      </div>\n\n      <div class=\"col-10 input\">\n        <input type=\"datetime-local\" class=\"form-control\" [(ngModel)]=\"endDate\">\n      </div>\n      \n    </div>\n    <button class=\"btn btn-primary btn-block\" (click)=\"addVisit()\">Submit</button>\n  </div>\n</div>\n\n<ng-container *ngIf=\"listDoctorsVisible\">\n  <div class=\"d-flex flex-column justify-content-center items col-11 col-md-4\">\n    <div class=\"item\" *ngFor=\"let doctor of doctors\">\n      <div class=\"name col-8\">\n        <span style=\"font-weight: bold;\">dr. {{doctor.firstname}} {{doctor.lastname}}</span><br>\n        <span> {{doctor.email}}</span>\n      </div>\n      <button class=\"btn btn-danger col-3\" (click)=\"deleteDoctor(doctor.key)\">Delete</button>\n    </div>\n  </div>\n</ng-container>\n\n\n\n<ng-container *ngIf=\"listPatientsVisible\">\n  <div class=\"d-flex flex-column justify-content-center items col-11 col-md-4\">\n    <div class=\"item\" *ngFor=\"let patient of patients\">\n      <div class=\"name col-8\">\n        <span style=\"font-weight: bold;\">{{patient.firstname}} {{patient.lastname}}</span><br>\n        <span> {{patient.email}}</span>\n      </div>\n      <button class=\"btn btn-danger col-3\" (click)=\"deletePatient(patient.key)\">Delete</button>\n    </div>\n  </div>\n</ng-container>\n\n\n<ng-container *ngIf=\"listVisitsVisible\">\n  <div class=\"d-flex flex-column justify-content-center items col-11 col-md-4\">\n    <div class=\"item\" *ngFor=\"let visit of visits\">\n      <div class=\"name col-8\">\n        <span style=\"font-weight: bold;\">Data rozpoczęcie wizyty: {{visit.startDate}}</span><br>\n        <span style=\"font-weight: bold;\">Data zakończenia wizyty: {{visit.endDate}}</span><br>\n        <span> Doctor: {{getDoctorName(visit.doctorKey)}}</span><br>\n        <span> Pacjent: {{getPacientName(visit.patientKey)}}</span>\n      </div>\n      <button class=\"btn btn-danger col-3\" (click)=\"deleteVisit(visit.key)\">Delete</button>\n    </div>\n  </div>\n</ng-container>","<div style=\"margin-top:52px;\">\n    <h1 style=\"text-align: center;margin-top:70px; margin-bottom:30px;\">Twoje recepty</h1>\n    <table class=\"table\" style=\"width:100%;\">\n        <tr  class=\"thead-dark\">\n            <th>PESEL</th>\n            <th>Lekarz wystawiający</th>\n            <th>Data wystawienia</th>\n            <th>Data ważności</th>\n            <th>Leki</th>\n        </tr>\n        <tr *ngFor=\"let prescription of prescriptions\">\n            <th>{{prescription.pesel}}</th>\n            <th>{{prescription.doctor}}</th>\n            <th>{{prescription.date | date: 'medium'}}</th>\n            <th>{{prescription.validity | date}}</th>\n            <th>\n                <ul>\n                    <li *ngFor=\"let medicine of prescription.medicines\">\n                        nazwa: {{medicine.medicine}}, ilość: {{medicine.quantity}}\n                    </li>\n                </ul>\n            </th>\n\n        </tr>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PrescriptionsService } from 'src/app/services/prescriptions.service';\n\n\n@Component({\n  selector: 'app-prescription-list',\n  templateUrl: './prescription-list.component.html',\n  styleUrls: ['./prescription-list.component.css']\n})\nexport class PrescriptionListComponent implements OnInit {\n\n  constructor(private prescriptionsService: PrescriptionsService) { \n\n  }\n  prescriptions: any;\n  ngOnInit(): void {\n    this.prescriptionsService.getPrescriptions().subscribe(data => \n      {\n        this.prescriptions = data;\n      });\n  \n  }\n\n}","export class Prescription {\r\n    key?: string;\r\n    pesel: string;\r\n    doctor: string;\r\n    medicines: any;\r\n    validity: string;\r\n    date: string;\r\n\r\n    constructor(pesel,doctor,medicines,validity)\r\n    {\r\n        this.pesel = pesel;\r\n        this.doctor = doctor;\r\n        this.medicines = medicines;\r\n        this.validity = validity;\r\n        this.date = new Date().toJSON();\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-patients',\n  templateUrl: './patients.component.html',\n  styleUrls: ['./patients.component.css']\n})\nexport class PatientsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p style=\"margin-top: 52px;\">Zarządzanie receptami</p>\n\n<div class=\"flex-box col-10 col-md-5\">\n    <a class = \"nav-link\" routerLink=\"/create-prescription\">\n        <img src=\"assets/images/book-visit.png\" class=\"img-fluid\">\n        <div class=\"sign\">Stwórz receptę</div>\n    </a>\n</div>\n\n<div class=\"flex-box col-10 col-md-5\">\n    <a class = \"nav-link\" routerLink=\"/prescription-list\">\n        <img src=\"assets/images/book-visit.png\" class=\"img-fluid\">\n        <div class=\"sign\">Przeglądaj recepty</div>\n    </a>\n</div>","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { Doctor } from '../models/doctor';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DoctorsService {\n\n  constructor(private db: AngularFireDatabase, private auth: AuthService) { }\n\n\n  getDoctors(): Observable<any> {\n    return this.db.list('doctors').snapshotChanges();\n  }\n\n  createDoctor(doctor: Doctor) {\n    this.auth.createUser(doctor.email, \"default\", \"doctors\", doctor, false);\n  }\n\n  deleteDoctor(key: string): void {\n    this.db.list('doctors').remove(key);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { DbQueryService } from './db-query.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  currentEmail: string;\n  currentUserRole: string;\n  isAdminUser = false;\n\n  constructor(private auth: AngularFireAuth, private db: AngularFireDatabase, private router: Router, private queryService: DbQueryService) { }\n\n  createUser(email: string, password: string, role: string, newUser: any, active: boolean) {\n    return this.auth.createUserWithEmailAndPassword(email, password).then(user => {\n      newUser.uid = user.user.uid;\n      newUser.active = active;\n\n      this.db.list(role).push(newUser);\n\n      if(active === true) \n        this.router.navigate(['/home']);\n    \n    })\n  }\n\n  logIn(email: string, password: string) {\n    return this.auth.signInWithEmailAndPassword(email, password).then(()=>{\n      this.currentEmail = email;\n      if(email === \"admin@admin.com\") {\n        this.isAdminUser = true;\n        this.router.navigate(['/admin-panel']);\n      } else {\n        this.currentUserRole = 'doctor';\n\n        this.queryService.findDoctorByEmail(email, \"value\").subscribe(x => {\n          if(x.length > 0 && x[0].active === false) {\n            this.router.navigate(['/active-account']);\n          }\n        })\n\n        this.queryService.findPatientByEmail(email, \"value\").subscribe(x => {\n          if(x.length > 0 && x[0].active === false) {\n            this.router.navigate(['/active-account']);\n          }\n        })\n        \n        this.router.navigate(['/home']);\n      }\n    })\n  }\n\n  logOut(){\n    this.auth.signOut().then(() => {\n      this.router.navigate(['/sign-in']);\n    })\n  }\n\n  getState() {\n    return this.auth.authState;\n  }\n\n  getCurrentUserEmail(): string {\n    return this.currentEmail;\n  }\n\n  isAdmin(): boolean {\n    return this.isAdminUser;\n  }\n\n  changePassword(email: string, password: string) {\n    this.auth.signOut();\n    this.auth.signInWithEmailAndPassword(email, \"default\").then(()=>{\n      var user = this.auth.currentUser.then(x => {x.delete()});\n      this.auth.createUserWithEmailAndPassword(email, password).then(()=> {\n        this.modifyActiveDoctor(email);\n        this.modifyActivePatient(email);\n      })\n    })\n  }\n\n  private modifyActiveDoctor(email: string) {\n    this.queryService.findDoctorByEmail(email, \"snapshot\").pipe(\n\n      map(changes =>\n      \n      changes.map(c =>\n      \n      ({​​ key: c.payload.key, ...c.payload.val() }​​)\n      \n      ))\n      \n      ).subscribe(x => {\n        ​​if(x.length > 0) {\n          this.queryService.changeToActive(x[0].key, \"doctors\");\n          this.router.navigate(['/home']);\n        }\n      }​​);\n  }\n\n  private modifyActivePatient(email: string) {\n    this.queryService.findPatientByEmail(email, \"snapshot\").pipe(\n\n      map(changes =>\n      \n      changes.map(c =>\n      \n      ({​​ key: c.payload.key, ...c.payload.val() }​​)\n      \n      ))\n      \n      ).subscribe(x => {\n        ​​if(x.length > 0) {\n          this.queryService.changeToActive(x[0].key, \"patients\");\n          this.router.navigate(['/home']);\n        }\n      }​​);\n  }\n}\n","<div class=\"form-box d-flex flex-column col-11 col-md-4\">\n    <h1>ACTIVE YOUR ACCOUNT</h1>\n    <div class=\"form\">\n      <div class=\"form-row\">\n\n        <div class=\"col-10 input\">\n            <input type=\"password\" placeholder=\"Password\" class=\"form-control\" [(ngModel)]=\"password\">\n        </div>\n\n        <div class=\"col-10 input\">\n            <input type=\"password\" placeholder=\"Re-enter password\"  class=\"form-control\" [(ngModel)]=\"password_repeat\">\n        </div>\n\n      </div>\n\n        <input type=\"submit\" class=\"btn btn-primary\" style=\"display: block;margin-left: auto;margin-right: auto;margin-top: 30px;\" value=\"Change Password\" (click)=\"onUpdatePassword()\">\n        \n        <div *ngIf=\"alertVisible\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\" style=\"margin-top: 10px;\">\n            {{errorInfo}}\n            <button type=\"button\" class=\"close\" (click)=\"hideAlert()\" aria-label=\"close\">\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-account-active',\n  templateUrl: './account-active.component.html',\n  styleUrls: ['./account-active.component.css']\n})\nexport class AccountActiveComponent implements OnInit {\n\n  password = ''; \n  password_repeat = ''; \n\n  alertVisible = false;\n  errorInfo = '';\n\n  constructor(private auth: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n\n  onUpdatePassword(): void {\n    if(!this.validatePassword())\n      return;\n    var email = this.auth.getCurrentUserEmail();\n    this.auth.changePassword(email, this.password);\n  }\n\n  hideAlert(): void{\n    this.alertVisible = false;\n  }\n\n  validatePassword(): boolean {\n    if(this.password !== this.password_repeat ) {\n      this.alertVisible = true;\n      this.errorInfo = \"Passwords are not the same!\";\n      return false;\n    } else if (this.password.length < 6) {\n      this.alertVisible = true;\n      this.errorInfo = \"Password must be longer!\";\n      return false;\n    } else {\n      this.alertVisible = false;\n    }\n    return true;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-work-hours',\n  templateUrl: './work-hours.component.html',\n  styleUrls: ['./work-hours.component.css']\n})\nexport class WorkHoursComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p style=\"margin-top: 52px;\">work-hours works!</p>\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { AccountActiveComponent } from \"./components/account-active/account-active.component\";\r\nimport { AdminComponent } from \"./components/admin/admin.component\";\r\nimport { BookVisitComponent } from \"./components/book-visit/book-visit.component\";\r\nimport { CreatePrescriptionComponent } from \"./components/create-prescription/create-prescription.component\";\r\nimport { HomeComponent } from \"./components/home/home.component\";\r\nimport { LoginComponent } from \"./components/login/login.component\";\r\nimport { PatientsComponent } from \"./components/patients/patients.component\";\r\nimport { PrescriptionListComponent } from \"./components/prescription-list/prescription-list.component\";\r\nimport { RegisterComponent } from \"./components/register/register.component\";\r\nimport { VisitsComponent } from \"./components/visits/visits.component\";\r\nimport { WorkHoursComponent } from \"./components/work-hours/work-hours.component\";\r\n\r\n\r\nconst routes: Routes = [\r\n    {path: \"home\", component: HomeComponent },\r\n    {path: \"\", redirectTo: \"/sign-in\", pathMatch: 'full'},\r\n    {path: \"visits\", component: VisitsComponent},\r\n    {path: \"workHours\", component: WorkHoursComponent},\r\n    {path: \"patients\", component: PatientsComponent},\r\n    {path: \"admin-panel\", component: AdminComponent},\r\n    {path: \"sign-in\", component: LoginComponent},\r\n    {path: \"register\", component: RegisterComponent},\r\n    {path: \"active-account\", component: AccountActiveComponent},\r\n    {path: \"book-visit\", component: BookVisitComponent},\r\n    {path: \"create-prescription\", component: CreatePrescriptionComponent},\r\n    {path: \"prescription-list\", component: PrescriptionListComponent},\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule],\r\n})\r\n\r\nexport class AppRoutingModule {}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}